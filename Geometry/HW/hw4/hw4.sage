## This file (hw4.sage) was *autogenerated* from the file hw4.tex.
import sagetex
_st_ = sagetex.SageTeXProcessor('hw4')
_st_.blockbegin()
try:
 from random import randint
 import random
 from datetime import datetime
 random.seed(datetime.now())
 import numpy as np
 var('A,B,C,D')
except:
 _st_.goboom(67)
_st_.blockend()
_st_.blockbegin()
try:
 A = randint(10,100)
 B = randint(10,200)
 C = randint(10,300)
 D = B
 P = line([[A,B],[C,D]])
 Q = point([A,B])
 S = point([C,D])
except:
 _st_.goboom(81)
_st_.blockend()
try:
 _st_.plot(0, format='notprovided', _p_=P+Q+S)
except:
 _st_.goboom(83)
try:
 _st_.inline(0, A)
except:
 _st_.goboom(86)
try:
 _st_.inline(1, B)
except:
 _st_.goboom(86)
try:
 _st_.inline(2, C)
except:
 _st_.goboom(86)
try:
 _st_.inline(3, D)
except:
 _st_.goboom(86)
_st_.blockbegin()
try:
 A = randint(10,100)
 B = randint(10,200)
 C = A
 D = randint(10,50)
 P = line([[A,B],[C,D]])
 Q = point([A,B])
 S = point([C,D])
except:
 _st_.goboom(101)
_st_.blockend()
try:
 _st_.plot(1, format='notprovided', _p_=P+Q+S)
except:
 _st_.goboom(103)
try:
 _st_.inline(4, A)
except:
 _st_.goboom(106)
try:
 _st_.inline(5, B)
except:
 _st_.goboom(106)
try:
 _st_.inline(6, C)
except:
 _st_.goboom(106)
try:
 _st_.inline(7, D)
except:
 _st_.goboom(106)
_st_.blockbegin()
try:
 var('m')
 y = function('y')
 m = randint(-5,5)
 A = randint(10,100)
 B = randint(10,200)
 C = randint(10,300)
 D = B
 E = C
 F = randint(10, 300)
 
 P = line([[A,B],[C,D]])
 Q = line([[C,D],[E,F]])
 R = point([A,B])
 S = point([C,D])
 T = point([E,F])
 
 
 LA = text('A', (A,B+.03*max(D,B,max(y(A),y(C)))))
 LB = text('B', (C+.03*C, D))
 LC = text('C', (1.03*E, F))
 
except:
 _st_.goboom(142)
_st_.blockend()
try:
 _st_.plot(2, format='notprovided', _p_=P+Q+R+S+T+LA+LB+LC)
except:
 _st_.goboom(144)
try:
 _st_.inline(8, A)
except:
 _st_.goboom(147)
try:
 _st_.inline(9, B)
except:
 _st_.goboom(147)
try:
 _st_.inline(10, C)
except:
 _st_.goboom(147)
try:
 _st_.inline(11, D)
except:
 _st_.goboom(147)
try:
 _st_.inline(12, y(x))
except:
 _st_.goboom(151)
_st_.endofdoc()
